name: 'Lint and publish to ghcr.io'
on:
  # publish on releases, e.g. v2.1.13 (image tagged as "2.1.13"
  # NB: "v" prefix is removed
  release:
    types:
      - published

  # publish "latest" tag on pushes to the main branch
  push:
    branches:
      - main

jobs:
  lint:
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.11", "3.12"]
        poetry-version: ["1.6.1"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - name: Configure Poetry to use local virtualenv
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local

      - name: Cache local virtualenv
        uses: actions/cache@v3
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}

      - name: Install project dependencies
        run: poetry install --without dev --no-root --no-directory

      - name: Lint with Ruff
        uses: chartboost/ruff-action@v1
        with:
          options: "check --config ./pyproject.toml --output-format github"
          src: "./src"

      - name: Lint with Black
        uses: psf/black@stable
        with:
          options: "--check --verbose"
          src: "./src"

  ghcr_publish:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    # Don't try to build the Docker image unless linting succeeds
    # TODO: See if it's possible to use `workflow_run` to trigger this so we
    #       don't need to replicate the linting job here.
    needs: lint
    steps:
      - uses: actions/checkout@v4

      - name: Build and publish a Docker image for ${{ github.repository }}
        uses: macbre/push-to-ghcr@master
        with:
          image_name: ${{ github.repository }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
